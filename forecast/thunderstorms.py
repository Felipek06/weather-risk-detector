from datetime import datetime

def check_thunderstorms(weather_data):
    """
    Verifica se h√° previs√£o de trovoadas nas pr√≥ximas 24 horas.
    Utiliza os dados da API para identificar risco de tempestades.
    """

    # Vari√°vel que controla se algum alerta foi encontrado
    thunderstorm_alert_found = False
    
    # Cabe√ßalho do relat√≥rio
    print("\n‚ö° THUNDERSTORM FORECAST (next 24h):")

    # Percorre as previs√µes dos pr√≥ximos 24h (8 per√≠odos de 3h)
    for forecast in weather_data['list'][:8]:  
        # Carrega o timestamp do per√≠odo atual e converte para hora leg√≠vel
        timestamp = forecast['dt']
        forecast_time = datetime.fromtimestamp(timestamp)
        formatted_time = forecast_time.strftime('%d/%m %H:%M')

        # Descri√ß√£o geral do tempo (ex: 'Thunderstorm', 'Clear')
        weather_main = forecast['weather'][0]['main']

        # Descri√ß√£o detalhada (ex: 'thunderstorm with light rain')
        weather_description = forecast['weather'][0]['description']

        # Probabilidade de chuva (convertida para porcentagem)
        pop = forecast['pop'] * 100  

        # Se houver palavra-chave 'thunderstorm' no clima, aciona alerta
        if 'thunderstorm' in weather_main.lower():
            thunderstorm_alert_found = True
            
            # Mostra alerta ao usu√°rio
            print(f"‚ö†Ô∏è THUNDERSTORM ALERT: '{weather_description.title()}' expected at {formatted_time}")
            print(f"üåßÔ∏è Chance of rain: {pop:.0f}%")
            print("-" * 60)

    # Mensagem caso NENHUMA trovoadas tenha sido encontrada
    if not thunderstorm_alert_found:
        print("‚úÖ No thunderstorms expected in the next 24 hours.")